//    This is a component of stippler, an image processing tool
//    Copyright 2004, 2005 Jeff Epler <jepler@unpythonic.net>
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program; if not, write to the Free Software
//    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

#include <cstdio>

struct point { double x, y; };
extern int cols, rows;

void output(char *name, bool reverse_video, bool variable_size, double maxden,
            double *den, int ndots, struct point *G) {
    printf("%%!PS-ADOBE-3.0\n");
    printf("%% generated by stippler from %s with %d dots %dx%d\n",
            name, ndots, cols, rows);
    if(cols > rows)
        printf("600 0 translate 90 rotate\n");
    if(!reverse_video) {
        printf("newpath\n"
                "-72        -72       moveto\n"
                "%d  72 add -72       lineto\n"
                "%d  72 add %d 72 add lineto\n"
                "-72        %d 72 add lineto\n"
                "closepath\n"
                "fill\n"
                "1.0 setgray\n", cols, cols, rows, rows);
    }
    printf("/p { sqrt 3 mul newpath 0 360 arc fill } def\n"); 
    for(int i=0; i<ndots; i++) {
        double depth = variable_size ? den[i] / maxden : .5;
        printf("%.3f %.3f %.3f p\n", G[i].x, G[i].y, depth);
    }
    printf("showpage\n");
}
